version: 2.1
jobs:
  plan-apply:
    working_directory: ~/lcm-sayu-infra
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform workspace new $CIRCLE_BRANCH || terraform workspace select $CIRCLE_BRANCH
            terraform plan -out terraform.out
      - persist_to_workspace:
          root: .
          paths:
            - .
  run-tests:
    working_directory: ~/lcm-sayu-infra
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: running tests compliance
          command: |
            apk add wget unzip
            wget -O terraform.zip https://releases.hashicorp.com/terraform/0.13.2/terraform_0.13.2_linux_386.zip
            unzip terraform.zip
            mv terraform /usr/local/bin/terraform
            terraform -v
            terraform init
            terraform workspace new tst || terraform workspace select tst
            terraform plan -out terraform.out
            terraform show -json terraform.out > plan.json
            ls
            cat plan.json
            echo $PWD
            echo $PWD:/target
            function terraformcompliance { docker run --rm -v $PWD:/target -i -t eerkunt/terraform-compliance "$@"; }
            docker pull eerkunt/terraform-compliance
            terraformcompliance --feature ~/lcm-sayu-infra/tests -p ~/lcm-sayu-infra/plan.json


  apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve terraform.out
      - persist_to_workspace:
          root: .
          paths:
            - .
  destroy:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform workspace select $CIRCLE_BRANCH
            terraform destroy -auto-approve

workflows:
  deploy_infrastructure:
    jobs:
      - run-tests
      - plan-apply:
          filters:
            branches:
              only:
                - prod
                - dev
          requires:
            - run-tests
      - apply:
          filters:
            branches:
              only:
                - prod
                - dev
          requires:
            - plan-apply
      - approve-destroy:
          filters:
            branches:
              only:
                - prod
                - dev
          type: approval
          requires:
            - apply
      - destroy:
          filters:
            branches:
              only:
                - prod
                - dev
          requires:
            - approve-destroy
