version: 2.1
jobs:
  plan-apply:
    working_directory: ~/lcm-sayu-infra
    docker:
      - image: hashicorp/terraform:0.13.3
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            export PROJECT_WORKSPACE=prod
            printf "bucket = \"$PROJECT_WORKSPACE-$TF_BE_BUCKET\" \nkey = \"$TF_BE_BUCKET_KEY\" \nregion = \"us-west-2\"" > backend.tfvars
            terraform init -backend-config=backend.tfvars -input=false
            terraform workspace new $PROJECT_WORKSPACE || terraform workspace select $PROJECT_WORKSPACE
            terraform plan -out terraform.out
      - persist_to_workspace:
          root: .
          paths:
            - .
  run-tests:
    working_directory: ~/lcm-sayu-infra
    docker:
      - image: hashicorp/terraform:0.13.3
    steps:
      - checkout
      - run:
          name: running tests compliance
          command: |
            apk add py3-pip g++ gcc libxml2-dev libxslt-dev libc-dev python3-dev
            export PROJECT_WORKSPACE=tst
            printf "bucket = \"$PROJECT_WORKSPACE-$TF_BE_BUCKET\" \nkey = \"$TF_BE_BUCKET_KEY\" \nregion = \"us-west-2\"" > backend.tfvars
            terraform init -backend-config=backend.tfvars
            terraform workspace new $PROJECT_WORKSPACE || terraform workspace select $PROJECT_WORKSPACE
            terraform plan -out terraform.out
            pip install wheel
            pip install terraform-compliance
            terraform-compliance -p terraform.out -f tests
  apply:
    docker:
      - image: hashicorp/terraform:0.13.3
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve terraform.out
      - persist_to_workspace:
          root: .
          paths:
            - .
  destroy:
    docker:
      - image: hashicorp/terraform:0.13.3
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            export PROJECT_WORKSPACE=prod
            terraform init -input=false
            terraform workspace select $PROJECT_WORKSPACE
            terraform destroy -auto-approve

workflows:
  deploy_infrastructure:
    jobs:
      - run-tests
      - plan-apply:
          filters:
            branches:
              only:
                - master
                - dev
          requires:
            - run-tests
      - approve-apply:
          filters:
            branches:
              only:
                - master
                - dev
          type: approval
          requires:
            - plan-apply
      - apply:
          filters:
            branches:
              only:
                - master
                - dev
          requires:
            - approve-apply
      - approve-destroy:
          filters:
            branches:
              only:
                - master
                - dev
          type: approval
          requires:
            - apply
      - destroy:
          filters:
            branches:
              only:
                - master
                - dev
          requires:
            - approve-destroy
